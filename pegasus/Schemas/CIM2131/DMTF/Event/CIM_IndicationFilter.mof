// Copyright (c) 2005 DMTF.  All rights reserved.
//<change cr="WIPCR00230" type="change">Clarify IndicationFilter rules 
// relatedto embedded query.</change>
//<change cr="WIPCR00240" type="change">Define DMTF:CQL as the formal 
// nameof CQL.</change>
// <change cr="WIPCR00249" type = "change"> Define use of CQL Query
// Language Template </change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IndicationFilter
// ==================================================================
   [UMLPackagePath ( "CIM::Event" ), Version ( "2.12.0" ), 
    Description (
       "CIM_IndicationFilter defines the criteria for generating an "
       "Indication and what data should be returned in the Indication. "
       "It is derived from CIM_ManagedElement to allow modeling the "
       "dependency of the filter on a specific service.")]
class CIM_IndicationFilter : CIM_ManagedElement {

      [Key, Description (
          "A System's CreationClassName. The Filter is defined in the "
          "context of a CIM_System, where it is hosted or to which it "
          "applies. In a future release, a weak relationship will be "
          "explicitly added to the model. This is not done now to "
          "allow further refinement of the Filter definition and its "
          "inheritance tree. Keys are defined now to allow the class "
          "to be instantiated."), 
       MaxLen ( 256 )]
   string SystemCreationClassName;

      [Key, Description (
          "A System's Name. The Filter is defined in the context of a "
          "CIM_System, where it is hosted or to which it applies. In a "
          "future release, a weak relationship will be explicitly "
          "added to the model. This is not done now to allow further "
          "refinement of the Filter definition and its inheritance "
          "tree. Keys are defined now to allow the class to be "
          "instantiated."), 
       MaxLen ( 256 )]
   string SystemName;

      [Key, Description (
          "Indicates the name of the class or the subclass used in the "
          "creation of an instance. When used with the other key "
          "properties of this class, it allows all instances of this "
          "class and its subclasses to be uniquely identified."), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description (
          "The name of the filter.")]
   string Name;

      [Description (
          "The path to a local namespace where the Indications "
          "originate. If NULL, the namespace of the Filter "
          "registration is assumed.")]
   string SourceNamespace;

      [Required, Description (
          "A query expression that defines the condition(s) under "
          "which Indications will be generated. For some Indication "
          "classes, the query expression may also define the instance "
          "properties to be copied to the CIM_InstIndication's "
          "SourceInstance and PreviousInstance properties. Query "
          "language semantics include projection (e.g., Select), range "
          "(e.g., From) and predicate (e.g., Where). \n"
          "When used with QueryLanguage set to \"DMTF:CQL\" or "
          "\"DMTF:CQLT\", the FROM clause shall contain at least one "
          "subclass of Indication and may contain any number of other "
          "classes or subqueries. If only one subclass of Indication "
          "is named, it defines the Indication that this Instance of "
          "IndicationFilter will produce. If more than one subclass of "
          "Indication is named, then one of them must be named "
          "explicitly in the select-list. \n"
          "The select-list must refer explicitly or implicitly to "
          "exactly one Indication subclass. In addition, it shall "
          "conform to one of several options: \n"
          "1) only a \"*\": This may only be used if the Indication "
          "subclass is the only entry on the FROM list. \n"
          "2) only a \"<Indicationclass or alias>.*\": This form may "
          "be used if the FROM clause contains more than one "
          "Indication subclass. \n"
          "3) a list of the form \"<propertyname>*[\",\"[<literal> AS "
          "]<propertyname>]\": This form may only be used if the "
          "Indication subclass is the only entry on the FROM list. In "
          "this form, the literal is assigned to the named property of "
          "the selected Indication subclass \n"
          "4) a list of the form \"<Indicationname>.<propertyname> "
          "*[\",\" [<Indicationname>.<propertyname> |\"\": <literal> "
          "AS <propertyname> | <fromname>.<propertyname> AS "
          "<propertyname> ] ]\" : The first term selects the "
          "appropriate Indication subclass to produce. Subsequent "
          "terms allow other properties of that indication, or allow a "
          "literal or property of another class to be assigned to the "
          "output as one of the properties of the selected Indication "
          "subclass. \n"
          "Note that in all cases, only the property names of the "
          "selected Indication subclass may be referred to in the "
          "select-list."), 
       ModelCorrespondence { "CIM_IndicationFilter.QueryLanguage" }]
   string Query;

      [Required, Description (
          "The language in which the query is expressed. . \n"
          "\"DMTF:CQL\" indicates a CIM Query Language string. \n"
          "\"DMTF:CQLT\" indicates a CIM Query Language Template "
          "string. When used, the identifiers recognized in the "
          "$identifier$ tokens are \"SELF\" and the property names of "
          "this class, or one of its subclasses. When used in the "
          "Query string, $SELF$ will be replaced by a string "
          "corresponding to a WBEM URI referencing the instance of "
          "this class that contains the Query template string. Tokens "
          "of the form $<propertyname>$ will be replaced by a string "
          "representing the corresponding property value of the "
          "instance of this class that contains the Query string."), 
       ModelCorrespondence { "CIM_IndicationFilter.Query" }]
   string QueryLanguage;
};
