// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NamedSharedIKESecret
// ==================================================================
   [UMLPackagePath ( "CIM::User::SharedSecret" ), Version ( "2.6.0" ), 
    Description (
       "CIM_NamedSharedIKESecret indirectly represents a shared secret "
       "credential. The local identity, IKEIdentity, and the remote "
       "peer identity share the secret that is named by the "
       "SharedSecretName. The SharedSecretName is used by the "
       "SharedSecretService to reference the secret.")]
class CIM_NamedSharedIKESecret : CIM_Credential {

      [Key,
          Propagated ( "CIM_SharedSecretService.SystemCreationClassName" 
          ), Description (
          "The scoping System's CCN."), 
       MaxLen ( 256 )]
   string SystemCreationClassName;

      [Key, Propagated ( "CIM_SharedSecretService.SystemName" ), 
       Description (
          "The scoping System's Name."), 
       MaxLen ( 256 )]
   string SystemName;

      [Key, Propagated ( "CIM_SharedSecretService.CreationClassName" ), 
       Description (
          "The scoping Service's CCN."), 
       MaxLen ( 256 )]
   string ServiceCreationClassName;

      [Key, Propagated ( "CIM_SharedSecretService.Name" ), 
       Description (
          "The scoping Service's Name."), 
       MaxLen ( 256 )]
   string ServiceName;

      [Key, Description (
          "The local Identity with whom the direct trust relationship "
          "exists."), 
       MaxLen ( 256 ), 
       ModelCorrespondence { 
          "CIM_NamedSharedIKESecret.LocalIdentityType" }]
   string LocalIdentity;

      [Key, Description (
          "LocalIdentityType is used to describe the type of the "
          "LocalIdentity."), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
          "11" }, 
       Values { "IPV4_ADDR", "FQDN", "USER_FQDN", "IPV4_ADDR_SUBNET",
          "IPV6_ADDR", "IPV6_ADDR_SUBNET", "IPV4_ADDR_RANGE",
          "IPV6_ADDR_RANGE", "DER_ASN1_DN", "DER_ASN1_GN", "KEY_ID" }, 
       ModelCorrespondence { "CIM_NamedSharedIKESecret.LocalIdentity" }]
   uint16 LocalIdentityType;

      [Key, Description (
          "The peer identity with whom the direct trust relationship "
          "exists."), 
       MaxLen ( 256 ), 
       ModelCorrespondence { 
          "CIM_NamedSharedIKESecret.PeerIdentityType" }]
   string PeerIdentity;

      [Key, Description (
          "PeerIdentityType is used to describe the type of the "
          "PeerIdentity."), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
          "11" }, 
       Values { "IPV4_ADDR", "FQDN", "USER_FQDN", "IPV4_ADDR_SUBNET",
          "IPV6_ADDR", "IPV6_ADDR_SUBNET", "IPV4_ADDR_RANGE",
          "IPV6_ADDR_RANGE", "DER_ASN1_DN", "DER_ASN1_GN", "KEY_ID" }, 
       ModelCorrespondence { "CIM_NamedSharedIKESecret.PeerIdentity" }]
   uint16 PeerIdentityType;

      [Description (
          "SharedSecretName is an indirect reference to a shared "
          "secret. The SecretService does not expose the actual secret "
          "but rather provides access to the secret via a name.")]
   string SharedSecretName;
};
