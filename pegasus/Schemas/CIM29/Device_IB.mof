// ===================================================================
// Title: Device_IB
// $State: Exp $
// $Date: 2005/02/17 00:09:56 $
// $RCSfile: Device_IB.mof,v $
// $Revision: 1.1 $
// ===================================================================
//#pragma inLine ("Includes/copyright.inc")
// Copyright 1998-2005 Distributed Management Task Force, Inc. (DMTF).
// All rights reserved.
// DMTF is a not-for-profit association of industry members dedicated
// to promoting enterprise and systems management and interoperability.
// DMTF specifications and documents may be reproduced for uses
// consistent with this purpose by members and non-members,
// provided that correct attribution is given.
// As DMTF specifications may be revised from time to time,
// the particular version and release date should always be noted.
// 
// Implementation of certain elements of this standard or proposed
// standard may be subject to third party patent rights, including
// provisional patent rights (herein "patent rights"). DMTF makes
// no representations to users of the standard as to the existence
// of such rights, and is not responsible to recognize, disclose, or
// identify any or all such third party patent right, owners or
// claimants, nor for any incomplete or inaccurate identification or
// disclosure of such rights, owners or claimants. DMTF shall have no
// liability to any party, in any manner or circumstance, under any
// legal theory whatsoever, for failure to recognize, disclose, or
// identify any such third party patent rights, or for such party's
// reliance on the standard or incorporation thereof in its product,
// protocols or testing procedures. DMTF shall have no liability to
// any party implementing such standard, whether such implementation
// is foreseeable or not, nor to any patent owner or claimant, and shall
// have no liability or responsibility for costs or losses incurred if
// a standard is withdrawn or modified after publication, and shall be
// indemnified and held harmless by any party implementing the
// standard from any and all claims of infringement by a patent owner
// for such implementations.
// 
// For information about patents held by third-parties which have
// notified the DMTF that, in their opinion, such patent may relate to
// or impact implementations of DMTF standards, visit
// http://www.dmtf.org/about/policies/disclosures.php.
//#pragma inLine
// ===================================================================
// Description: The Device Model extends the management concepts that
//              are related to LogicalDevices. This file defines the
//              classes to manage Infiniband devices.
// 
//              The object classes below are listed in an order that
//              avoids forward references. Required objects, defined
//              by other working groups, are omitted.
// ==================================================================
// Change Log for v2.8 Final
// CR1202 - Move experiment IB  forward to 2.9
// 
// Change Log for 2.8 Preliminary
// CR1071 - Return experimental classes into 2.8.
// 
// Change Log for v2.7 Final
// CR962 - Fix the overlapping values defined for PortTypes.
// CR971 - Remove the experimental IB class definitions so they can
//         remain experimental in 2.8
// 
// Change Log for v2.7
// CR631 - Add IBPortStatistics
// CR633 - Add IBPort
// CR783 - Add IBPortController
//       - Modify IBPort
// ==================================================================

#pragma locale ("en_US")


// ===================================================================
// IBSubnetManager
// ===================================================================
   [Version ( "2.7.0" ), Description (
       "An Infiniband Subnet Manager (SM) is an entity responsible for "
       "configuring and managing an IB subnet. It uses Subnet "
       "Management Agents (SMA) to access and manage individual nodes. "
       "The SM is hosted in the context of a specific computer system "
       "(i.e., hosted by an instance of UnitaryComputerSystem), as "
       "described by the HostedService association. Note that there "
       "may be multiple SMs operating in a subnet, but only the "
       "elected master is allowed to perform configuration functions.")]
class CIM_IBSubnetManager : CIM_Service {

      [Write, Description (
          "Administratively assigned priority for this SM, used to "
          "establish the master. A higher number indicates a higher "
          "priority and likelihood of becoming the master. The "
          "property value can be reset by the master SM."), 
       MappingStrings { "MAD.IBTA | SMInfo | Priority" }]
   uint8 Priority;

      [Description (
          "Enumerated value that indicates the Subnet Manager's State. "
          "The values are fairly self-explanatory except for \"Not "
          "Active\". This value indicates that the SM is available to "
          "participate in the subnet, but has not been given "
          "permission. A value \"Unknown\" (0) is also defined."), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Not Active", "Discovering", "Standby",
          "Master" }, 
       MappingStrings { "MAD.IBTA | SMInfo | SMState" }]
   uint16 State;
};


// ===================================================================
// end of file
// ===================================================================
