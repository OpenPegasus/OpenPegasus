// Copyright (c) 2013 DMTF.  All rights reserved.
   [Association, Experimental, Version ( "2.40.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "Indicates that two Storage objects were replicated at the "
       "specified point in time. If the CopyType property is set to "
       "\'Sync\' (=3), then synchronization of the Storage objects is "
       "preserved." )]
class CIM_FileSystemSynchronized : CIM_Synchronized {

      [Key, Override ( "SystemElement" ), 
       Description ( 
          "SystemElement represents the FileSystem that is the "
          "source of the replication." )]
   CIM_ManagedElement REF SystemElement;

      [Key, Override ( "SyncedElement" ), 
       Description ( 
          "SyncedElement represents the FileSystem that is the "
          "target of the replication." )]
   CIM_ManagedElement REF SyncedElement;

      [Description ( 
          "Enumeration indicating the supported "
          "SyncType/Mode/Local-or-Remote combinations." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "..", "0x8000.." }, 
       Values { "Synchronous Mirror Local", 
          "Asynchronous Mirror Local", "Synchronous Mirror Remote", 
          "Asynchronous Mirror Remote", 
          "Synchronous Snapshot Local", 
          "Asynchronous Snapshot Local", 
          "Synchronous Snapshot Remote", 
          "Asynchronous Snapshot Remote", "Synchronous Clone Local", 
          "Asynchronous Clone Local", "Synchronous Clone Remote", 
          "Asynchronous Clone Remote", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 ReplicationType;

      [Description ( 
          "ReplicaType provides information on how the Replica is "
          "being maintained. Values are: \r\n"
          "Full Copy: This indicates that a full copy of the source "
          "object is (or will be) generated . \r\n"
          "Before Delta: This indicates that the source object will "
          "be maintained as a delta data from the replica. \r\n"
          "After Delta: This indicates that the replica will be "
          "maintained as delta data from the source object. \r\n"
          "Log: This indicates that the replica object is being "
          "maintained as a log of changes to the source. \r\n"
          "Not Specified: The method of maintaining the copy is not "
          "specified." ), 
       ValueMap { "0", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "Not Specified", "Full Copy", "Before Delta", 
          "After Delta", "Log", "DMTF Reserved", "Vendor Specific" }]
   uint16 ReplicaType;

      [Description ( 
          "SyncState describes the state of the association with "
          "respect to Replication activity. Values are: \r\n"
          "Initialized: The link to enable replication is "
          "established. And source/replica elements are associated, "
          "but the Copy engine has not started. \r\n"
          "PrepareInProgress: Preparation for Replication is in "
          "progress and the Copy engine has started. \r\n"
          "Prepared: All necessary preparation has completed. \r\n"
          "ResyncInProgress: Synchronization or Resynchronization "
          "is in progress. This may be the initial \'copy\' or "
          "subsequent changes being copied. \r\n"
          "Synchronized: An Async or Sync replication is currently "
          "synchronized. When this value is set, SyncMaintained "
          "will be true. \r\n"
          "FractureInProgress: An operation to fracture an Async or "
          "Sync replication is in progress. \r\n"
          "Fractured: An Async or Sync replication is fractured. \r\n"
          "QuiesceInProgress: A quiesce operation is in progress. \r\n"
          "Quiesced: The replication has been quiesced and is ready "
          "for a change. \r\n"
          "RestoreInProgress: An operation is in progress to copy "
          "the Synced object to the System object. \r\n"
          "Idle: The \'normal\' state for an UnSyncAssoc replica. \r\n"
          "Frozen: All blocks copied from source to an UnSyncAssoc "
          "replica and the copy engine is stopped. \r\n"
          "CopyInProgress: A deferred background copy operation is "
          "in progress to copy the source to the replica target for "
          "an UnSyncAssoc association. \r\n"
          "Broken: The relationship is non-functional due to errors "
          "in the source, the target, the path between the two or "
          "space constraints." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "..", "0x8000.." }, 
       Values { "Unknown", "Initialized", "PrepareInProgress", 
          "Prepared", "ResyncInProgress", "Synchronized", 
          "Fracture In Progress", "QuiesceInProgress", "Quiesced", 
          "Restore In Progresss", "Idle", "Broken", "Fractured", 
          "Frozen", "Copy In Progress", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 SyncState;

      [Description ( 
          "CopyPriority allows the priority of background copy "
          "engine I/O to be managed relative to host I/O operations "
          "during a sequential background copy operation. Values "
          "are: \r\n"
          "Low: copy engine I/O lower priority than host I/O. \r\n"
          "Same: copy engine I/O has the same priority as host I/O. \r\n"
          "High: copy engine I/O has higher priority than host I/O. \r\n"
          "Urgent: copy operation to be performed as soon as "
          "possible, regardless of the host I/O requests." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "0x8000.." }, 
       Values { "Not Managed", "Low", "Same", "High", "Urgent", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 CopyPriority;

      [Description ( 
          "CopyMethodology specifies what copy methodology the "
          "service uses to create and/or maintain the target "
          "element. \r\n"
          "Values are: \r\n"
          "Not Specified: The method of maintaining the copy is not "
          "specified. \r\n"
          "Full Copy: This indicates that a full copy of the source "
          "object is (or will be) generated . \r\n"
          "Incremental-Copy: Only changed data from source element "
          "is copied to target element. \r\n"
          "Differential-Copy: Only the new writes to source element "
          "are copied to the target element. \r\n"
          "Copy-On-Write: Affected data is copied on the first "
          "write to the source or to the target elements. \r\n"
          "Copy-On-Access: Affected data is copied on the first "
          "access to the source element. \r\n"
          "Delta-Update: Difference based replication where after "
          "the initial copy, only updates to source are copied to "
          "target. \r\n"
          "Snap-And-Clone: The service creates a snapshot of the "
          "source element first, then uses the the snapshot as the "
          "source of the copy operation to the target element." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "..", "0x8000.." }, 
       Values { "Not Specified", "Other", "Implementation decides", 
          "Full Copy", "Incremental-Copy", "Differential-Copy", 
          "Copy-On-Write", "Copy-On-Access", "Delta-Update", 
          "Snap-And-Clone", "DMTF Reserved", "Vendor Specific" }]
   uint16 CopyMethodology;

      [Description ( 
          "This property specifies whether the source, the target, "
          "or both elements involved in a copy operation are "
          "undiscovered. An element is considered undiscovered if "
          "its object model is not known to the service performing "
          "the copy operation. The values are: \r\n"
          "SystemElement: The source element. \r\n"
          "SyncedElement: The target element. \r\n"
          "Both: Both the source and the target elements. If both "
          "the source and the target elements are discovered, the "
          "value of this property shall be NULL." ), 
       ValueMap { "2", "3", "4", "..", "0x8000.." }, 
       Values { "SystemElement", "SyncedElement", "Both", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 UndiscoveredElement;

      [Description ( 
          "This property specifies whether the source, the target, "
          "or both elements are \read only to the "
          "host.SystemElement: The source element. \r\n"
          "SyncedElement: The target element. \r\n"
          "Both: Both the source and the target elements.are read "
          "only to the host." ), 
       ValueMap { "2", "3", "4", "..", "0x8000.." }, 
       Values { "SystemElement", "SyncedElement", "Both", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 ReadOnly;


};
