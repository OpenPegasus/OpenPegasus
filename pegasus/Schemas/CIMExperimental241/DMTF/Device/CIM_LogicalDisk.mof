// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "A LogicalDisk is a presentation of a contiguous range of "
       "logical blocks that is identifiable by applications such as "
       "filesystems via the Name field. (DeviceID (key) may use the "
       "same name or some other unique text such as a UUID.) For "
       "example in a Windows environment, the Name field may contain a "
       "drive letter. In a Unix environment, it may contain the access "
       "path (for example, \'/dev/...\'); and in a NetWare "
       "environment, may contain the volume name. LogicalDisks are "
       "typically built on a DiskPartition or other LogicalDisks (for "
       "instance, those exposed by a software volume manager). "
       "However, it can be based on other StorageExtents, like "
       "CIM_Memory, in the case of a RAM disk. \n"
       "\n"
       "LogicalDisks SHOULD set the \'Exported\' value in "
       "ExtentStatus[] if they are intended for application use." )]
class CIM_LogicalDisk : CIM_StorageExtent {

      [Override ( "NameFormat" ), 
       Description ( 
          "LogicalDisk names shall use OS Device Name format." ), 
       ValueMap { "1", "12" }, 
       Values { "Other", "OS Device Name" }]
   uint16 NameFormat = 12;

      [Override ( "NameNamespace" ), 
       Description ( 
          "LogicalDisk names shall use OS Device Namespace." ), 
       ValueMap { "1", "8" }, 
       Values { "Other", "OS Device Namespace" }]
   uint16 NameNamespace = 8;

      [Experimental, Override ( "Usage" ), 
       Description ( 
          "Indicates the intended usage or any restrictions that "
          "may have been imposed on the usage of this component. "
          "All ValueMap/Values entries are defined in "
          "CIM_StorageExtent. To promote interoperability across "
          "subclasses, all new entries for this class shall be "
          "defined there." ), 
       ModelCorrespondence { "CIM_LogicalDisk.OtherUsageDescription" }]
   uint16 Usage;

      [Experimental, Override ( "OtherUsageDescription" ), 
       Description ( 
          "Populated when \"Usage\" has the value of \"Other\"." ), 
       ModelCorrespondence { "CIM_LogicalDisk.Usage" }]
   string OtherUsageDescription;

      [Experimental, Override ( "ClientSettableUsage" ), 
       Description ( 
          "Indicates which values from the \"Usage\" value map can "
          "be manipulated by a client using the "
          "method\"StorageConfigurationService.RequestUsageChange\"." ), 
       ModelCorrespondence { "CIM_LogicalDisk.Usage" }]
   uint16 ClientSettableUsage[];

      [Experimental, Description ( 
          "The number of Extents in the process of migrating for "
          "this logical disk when the logical disk relocation is on "
          "going." )]
   uint64 NumExtentsMigrating;

      [Experimental, Description ( 
          "True if the logical disk is thinly provisioned." )]
   boolean ThinlyProvisioned = false;


};
