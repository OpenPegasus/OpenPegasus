// Copyright (c) 2012 DMTF.  All rights reserved.
   [Experimental, Version ( "2.35.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "Contains various options for use by the TierPolicyService "
       "methods to offer clients additional controls to manipulate a "
       "policy associated with storage tiering." )]
class CIM_TierPolicySettingData : CIM_TierSettingData {

      [Write, Description ( 
          "The policy rule applies to elements that have the "
          "indicated provisioning. For example, thinly provisioned "
          "elements." ), 
       ValueMap { "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "ThinlyProvisioned", "ThicklyProvisioned", "All", 
          "Not Applicable", "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { "CIM_TierPolicyRule.ProvisioningType" }]
   uint16 ProvisioningType;

      [Write, Description ( 
          "In situations where more than one PolicySet is "
          "associated to the ManagedElement, this property "
          "indicates which policy has higher priority. The lower "
          "the number, the higher the priority. A value of 0 "
          "indicates the implementation decides the priority of the "
          "rule." ), 
       MinValue ( 0 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_TierPolicySetAppliesToElement.RulePriority" }]
   uint32 RulePriority;

      [Write, Description ( 
          "Specifies how fast data should be moved between storage tiers."
           ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "..", "0x8000.." }, 
       Values { "Very High", "High", "Medium", "Low", "Very Low", 
          "Implementation Decides", "Not Applicable", 
          "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { "CIM_TierPolicyRule.DataMovementRate" }]
   uint16 DataMovementRate;

      [Experimental, Write, Description ( 
          "If true, when a thinly provisioned storage element "
          "subject to storage tiering needs additional storage "
          "capacity and the storage pool that the storage element "
          "is allocated from is out of free capacity, the system "
          "allocates the additional storage capacity from another "
          "storage pool in the same tiering policy that is "
          "associated to the storage volume." ), 
       ModelCorrespondence { 
          "CIM_TierPolicyServiceCapabilities.SupportsAutomaticStoragePoolAllocation" }]
   boolean AutomaticStoragePoolAllocationEnabled;

      [Experimental, Write, Description ( 
          "If true, the Automated Storage Tiering subsystem will "
          "coordinate with the remote site while considering "
          "tiering of elements involved in replication." ), 
       ModelCorrespondence { 
          "CIM_TierPolicyServiceCapabilities.SupportedRemoteTieringCoordination" }]
   boolean RemoteTieringCoordinationEnabled;


};
