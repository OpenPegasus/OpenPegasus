// Copyright (c) 2011 DMTF.  All rights reserved.
   [Experimental, Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Device::Views" ), 
    Description ( 
       "The CIM_VolumeView instance is a view that is derived from "
       "CIM_StorageVolume, CIM_ElementSettingData, CIM_StorageSetting, "
       "CIM_AllocatedFromStoragePool and CIM_StoragePool." )]
class CIM_VolumeView : CIM_LogicalDeviceView {

      [Key, Description ( 
          "The SystemCreationClassName for the StorageVolume (or "
          "LogicalDisk) as reported in the underlying StorageVolume "
          "(or LogicalDisk) instance." ), 
       ModelCorrespondence { 
          "CIM_StorageVolume.SystemCreationClassName", 
          "CIM_LogicalDisk.SystemCreationClassName" }]
   string SVSystemCreationClassName;

      [Key, Description ( 
          "The SystemName for the StorageVolume (or LogicalDisk) as "
          "reported in the underlying StorageVolume (LogicalDisk) "
          "instance." ), 
       ModelCorrespondence { "CIM_StorageVolume.SystemName", 
          "CIM_LogicalDisk.SystemName" }]
   string SVSystemName;

      [Key, Description ( 
          "The CreationClassName for the StorageVolume (or "
          "LogicalDisk) as reported in the underlying StorageVolume "
          "(or LogicalDisk) instance." ), 
       ModelCorrespondence { "CIM_StorageVolume.CreationClassName", 
          "CIM_LogicalDisk.CreationClassName" }]
   string SVCreationClassName;

      [Key, Description ( 
          "An opaque identifier of the underlying StorageVolume (or "
          "LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.DeviceID", 
          "CIM_LogicalDisk.DeviceID" }]
   string SVDeviceID;

      [Description ( 
          "The identifier for the underlying StorageVolume (or LogicalDisk)."
           ), 
       ModelCorrespondence { "CIM_StorageVolume.Name", 
          "CIM_LogicalDisk.Name" }]
   string SVName;

      [Description ( 
          "The format of the identifier for the underlying "
          "StorageVolume (or LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.NameFormat", 
          "CIM_LogicalDisk.NameFormat" }]
   uint16 SVNameFormat;

      [Description ( 
          "The NameNamespace as reported in the underlying "
          "StorageVolume (or LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.NameNamespace", 
          "CIM_LogicalDisk.NameNamespace" }]
   uint16 SVNameNamespace;

      [Description ( 
          "The ExtentStatus as reported in the underlying "
          "StorageVolume (or LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.ExtentStatus", 
          "CIM_LogicalDisk.ExtentStatus" }]
   uint16 SVExtentStatus[];

      [Description ( 
          "The OperationalStatus as reported in the underlying "
          "StorageVolume (or LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.OperationalStatus", 
          "CIM_LogicalDisk.OperationalStatus" }]
   uint16 SVOperationalStatus[];

      [Description ( 
          "The BlockSize for the StorageVolume (or LogicalDisk) as "
          "reported in the underlying StorageVolume (or "
          "LogicalDisk) instance." ), 
       ModelCorrespondence { "CIM_StorageVolume.BlockSize", 
          "CIM_LogicalDisk.BlockSize" }]
   uint64 SVBlockSize;

      [Description ( 
          "The number of blocks that make up the volume as reported "
          "in the underlying StorageVolume (or LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.NumberOfBlocks", 
          "CIM_LogicalDisk.NumberOfBlocks" }]
   uint64 SVNumberOfBlocks;

      [Description ( 
          "The number of usable blocks in the volume as reported in "
          "the underlying StorageVolume (or LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.ConsumableBlocks", 
          "CIM_LogicalDisk.ConsumableBlocks" }]
   uint64 SVConsumableBlocks;

      [Description ( 
          "Whether or not redundancy is supported for the volume as "
          "reported in the underlying StorageVolume (or "
          "LogicalDisk)." )]
   boolean SVIsBasedOnUnderlyingRedundancy;

      [Description ( 
          "Whether or not NoSinglePointOfFailure is supported for "
          "the volume as reported in the underlying StorageVolume "
          "(or LogicalDisk)." ), 
       ModelCorrespondence { 
          "CIM_StorageVolume.NoSinglePointOfFailure", 
          "CIM_LogicalDisk.NoSinglePointOfFailure" }]
   boolean SVNoSinglePointOfFailure;

      [Description ( 
          "The DataRedundancy supported by the volume as reported "
          "in the underlying StorageVolume (or LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.DataRedundancy", 
          "CIM_LogicalDisk.DataRedundancy" }]
   uint16 SVDataRedundancy;

      [Description ( 
          "The PackageRedundancy supported by the volume as "
          "reported in the underlying StorageVolume (or "
          "LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.PackageRedundancy", 
          "CIM_LogicalDisk.PackageRedundancy" }]
   uint16 SVPackageRedundancy;

      [Description ( 
          "The DeltaReservation supported by the volume as reported "
          "in the underlying StorageVolume (or LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.DeltaReservation", 
          "CIM_LogicalDisk.DeltaReservation" }]
   uint8 SVDeltaReservation;

      [Experimental, Description ( 
          "The Usage supported by the volume as reported in the "
          "underlying StorageVolume (or LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.Usage", 
          "CIM_LogicalDisk.Usage" }]
   uint16 SVUsage;

      [Experimental, Description ( 
          "The OtherUsageDescription supported by the volume as "
          "reported in the underlying StorageVolume (or "
          "LogicalDisk)." ), 
       ModelCorrespondence { 
          "CIM_StorageVolume.OtherUsageDescription", 
          "CIM_LogicalDisk.OtherUsageDescription" }]
   string SVOtherUsageDescription;

      [Experimental, Description ( 
          "The ClientSettableUsage supported by the volume as "
          "reported in the underlying StorageVolume (or "
          "LogicalDisk)." ), 
       ModelCorrespondence { 
          "CIM_StorageVolume.ClientSettableUsage", 
          "CIM_LogicalDisk.ClientSettableUsage" }]
   uint16 SVClientSettableUsage[];

      [Description ( 
          "The InstanceID of the StorageSetting for the volume as "
          "reported in its underlying StorageSetting." ), 
       ModelCorrespondence { "CIM_StorageSetting.InstanceID" }]
   string SSInstanceID;

      [Description ( 
          "The ElementName of the StorageSetting for the volume as "
          "reported in its underlying StorageSetting." ), 
       ModelCorrespondence { "CIM_StorageSetting.ElementName" }]
   string SSElementName;

      [Description ( 
          "Whether or not NoSinglePointOfFailure was requested in "
          "the StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.NoSinglePointOfFailure" }]
   boolean SSNoSinglePointOfFailure;

      [Description ( 
          "The DataRedundancyMin value supported by the "
          "StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { "CIM_StorageSetting.DataRedundancyMin" }]
   uint16 SSDataRedundancyMin;

      [Description ( 
          "The DataRedundancyMax value supported by the "
          "StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { "CIM_StorageSetting.DataRedundancyMax" }]
   uint16 SSDataRedundancyMax;

      [Description ( 
          "The DataRedundancyGoal supported by the StorageSetting "
          "for the volume as reported in its underlying "
          "StorageSetting." ), 
       ModelCorrespondence { "CIM_StorageSetting.DataRedundancyGoal" }]
   uint16 SSDataRedundancyGoal;

      [Description ( 
          "The PackageRedundancyMin value supported by the "
          "StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.PackageRedundancyMin" }]
   uint16 SSPackageRedundancyMin;

      [Description ( 
          "The PackageRedundancyMax value supported by the "
          "StorageSetting for the volume as reported in the "
          "underlying StorageSetting." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.PackageRedundancyMax" }]
   uint16 SSPackageRedundancyMax;

      [Description ( 
          "The PackageRedundancyGoal supported by the "
          "StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.PackageRedundancyGoal" }]
   uint16 SSPackageRedundancyGoal;

      [Description ( 
          "The ChangeableType defined for the StorageSetting for "
          "the volume as reported in the underlying StorageSetting." ), 
       ModelCorrespondence { "CIM_StorageSetting.ChangeableType" }]
   uint16 SSChangeableType;

      [Description ( 
          "The SpaceConsumed from the StoragePool by the volume as "
          "reported in its underlying AllocatedFromStoragePool "
          "association to the StoragePool." ), 
       ModelCorrespondence { 
          "CIM_AllocatedFromStoragePool.SpaceConsumed" }]
   uint64 AFSPSpaceConsumed;

      [Key, Description ( 
          "The InstanceID of the StoragePool for the volume as "
          "reported in the underlying StoragePool." ), 
       ModelCorrespondence { "CIM_StoragePool.InstanceID" }]
   string SPInstanceID;

      [Description ( 
          "The PoolID of the StoragePool for the volume as reported "
          "in the underlying StoragePool." ), 
       ModelCorrespondence { "CIM_StoragePool.PoolID" }]
   string SPPoolID;

      [Description ( 
          "Other identifiers for the StorageVolume (or LogicalDisk) "
          "as reported in the underlying StorageVolume (or "
          "LogicalDisk)." ), 
       ModelCorrespondence { 
          "CIM_StorageVolume.OtherIdentifyingInfo", 
          "CIM_LogicalDisk.OtherIdentifyingInfo" }]
   string SVOtherIdentifyingInfo[];

      [Description ( 
          "The description of the other identifiers for the "
          "StorageVolume (or LogicalDisk) as reported in the "
          "underlying StorageVolume (or LogicalDisk)." ), 
       ModelCorrespondence { 
          "CIM_StorageVolume.IdentifyingDescriptions", 
          "CIM_LogicalDisk.IdentifyingDescriptions" }]
   string SVIdentifyingDescriptions[];

      [Description ( 
          "The user friendly name for the underlying StorageVolume "
          "(or LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.ElementName", 
          "CIM_LogicalDisk.ElementName" }]
   string SVElementName;

      [Description ( 
          "The Primordial property for the underlying StorageVolume "
          "(or LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.Primordial", 
          "CIM_LogicalDisk.Primordial" }]
   boolean SVPrimordial;

      [Experimental, Description ( 
          "The ExtentDiscriminatorl property for the underlying "
          "StorageVolume (or LogicalDisk)." ), 
       ModelCorrespondence { 
          "CIM_StorageVolume.ExtentDiscriminator", 
          "CIM_LogicalDisk.ExtentDiscriminator" }]
   string SVExtentDiscriminator[];

      [Description ( 
          "The ExtentStripeLength value supported by the "
          "StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { "CIM_StorageSetting.ExtentStripeLength" }]
   uint16 SSExtentStripeLength;

      [Description ( 
          "The ExtentStripeLengthMin value supported by the "
          "StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.ExtentStripeLengthMin" }]
   uint16 SSExtentStripeLengthMin;

      [Description ( 
          "The ExtentStripeLengthMax supported by the "
          "StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.ExtentStripeLengthMax" }]
   uint16 SSExtentStripeLengthMax;

      [Description ( 
          "The ParityLayout defined by the StorageSetting for the "
          "volume as reported in its underlying StorageSetting." ), 
       ModelCorrespondence { "CIM_StorageSetting.ParityLayout" }]
   uint16 SSParityLayout;

      [Description ( 
          "The UserDataStripeDepth value supported by the "
          "StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { "CIM_StorageSetting.UserDataStripeDepth" }]
   uint64 SSUserDataStripeDepth;

      [Description ( 
          "The UserDataStripeDepthMin value supported by the "
          "StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.UserDataStripeDepthMin" }]
   uint64 SSUserDataStripeDepthMin;

      [Description ( 
          "The UserDataStripeDepthMax value supported by the "
          "StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.UserDataStripeDepthMax" }]
   uint64 SSUserDataStripeDepthMax;

      [Experimental, Description ( 
          "The StoragePoolInitialUsage value supported by the "
          "StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.StoragePoolInitialUsage" }]
   uint16 SSStoragePoolInitialUsage;

      [Experimental, Description ( 
          "The StorageExtentInitialUsage value supported by the "
          "StorageSetting for the volume as reported in its "
          "underlying StorageSetting." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.StorageExtentInitialUsage" }]
   uint16 SSStorageExtentInitialUsage;

      [Experimental, Description ( 
          "The IsComposite property as reported in the underlying "
          "StorageVolume (or LogicalDisk)." ), 
       ModelCorrespondence { "CIM_StorageVolume.IsComposite", 
          "CIM_LogicalDisk.IsComposite" }]
   boolean SVIsComposite;


};
