// Copyright (c) 2012 DMTF.  All rights reserved.
   [Experimental, Version ( "2.32.0" ), 
    UMLPackagePath ( "CIM::Network" ), 
    Description ( 
       "This class describes the capabilities of a load balancer "
       "service. An instance of this class represents the capabilities "
       "of a network policy service with the ServiceType set to 2 "
       "(\"Load Balancer\")." )]
class CIM_LoadBalancerServiceCapabilities : CIM_NetworkPolicyServiceCapabilities {

      [Description ( 
          "This property describes the supported capabilities of a "
          "load balancer service.\n"
          "\n"
          "ICMP Health Check: support of ICMP \n"
          "based Health Check methods used for verifying the "
          "availability of servers and/or applications.\n"
          "UDP Health Check: \n"
          "support of UDP based Health Check methods used for "
          "verifying the availability of servers and/or "
          "applications. \n"
          "TCP \n"
          "Health Check: support of TCP based Health Check methods "
          "used for verifying the availability of servers and/or \n"
          "applications. \n"
          "HTTP Health Check: support of HTTP based Health Check "
          "methods used for verifying the availability of \n"
          "servers and/or applications. \n"
          "HTTPS Health Check: support of HTTPs based Health Check "
          "methods used for verifying \n"
          "the availability of servers and/or applications. \n"
          "SNMP Health Check: support of SNMP based Health Check "
          "methods \n"
          "used for verifying the availability of servers and/or "
          "applications. \n"
          "DNS Health Check: support of HTTP based Health \n"
          "Check methods used for verifying the availability of "
          "servers and/or applications.\n"
          "SourceAddressHash: support of the \n"
          "Source Address Hash algorithm which uses a hash of the "
          "source IP address to determine which address to use from "
          "the \n"
          "pool. \n"
          "DestinationAddressHash: support of the Destination "
          "Address Hash algorithm which uses a hash of the \n"
          "destination IP address to determine which address to use "
          "from the pool. \n"
          "HTTPContentHash: support of the HTTP \n"
          "Address Hash algorithm which uses a hash of the HTTP "
          "content to determine which address to use from the pool. \n"
          "\n"
          "URLHash: support of the URL Hash algorithm which uses a "
          "hash of the URL of the request to determine which "
          "address \n"
          "to use from the pool. \n"
          "Layer4PayloadHash: support of the Layer 4 Payload Hash "
          "algorithm which uses a hash of the \n"
          "payload of the request to determine which address to use "
          "from the pool. \n"
          "CookieHash: support of the Cookie Hash \n"
          "algorithm which uses a hash of a cookie of the request "
          "to determine which address to use from the pool. \n"
          "\n"
          "HTTPHeaderHash: support of the HTTP Header Hash "
          "algorithm which uses a hash of a header of the request "
          "to \n"
          "determine which address to use from the pool. \n"
          "LeastLoadedServer: support of the Least Loaded Server "
          "algorithm \n"
          "which chooses, every time, the server with least "
          "processing load of all the active servers. \n"
          "LeastResponseTime: support of the \n"
          "Least Response Time algorithm which chooses, every time, "
          "the server with the fastest response of all the active \n"
          "servers. \n"
          "LeastConnections: support of the Least Connections "
          "algorithm which chooses, every time, the server with \n"
          "least number of current connections. \n"
          "LeastBandwidth: support of the Least Bandwidth algorithm "
          "which chooses, every \n"
          "time, the server that is currently serving the least "
          "amount of traffic. \n"
          "RoundRobin: support of the Round Robin \n"
          "algorithm which can be described as a Weighted "
          "Round-Robin that uses the equal weights in every server, "
          "so each \n"
          "server takes a turn. \n"
          "WeightedRoundRobin: support of the Weighted Round Robin "
          "algorithm which is based on the \n"
          "assignment of different weights to each of the balanced "
          "servers. This weight represents the server capacity in \n"
          "relation to the capacity of the other servers.\n"
          "Cookie Persistence: support of cookie based Persistence "
          "method used \n"
          "for allowing a user to interact during a session with a "
          "particular server. \n"
          "Source IP Persistence: support of \n"
          "source IP Address based Persistence method used for "
          "allowing a user to interact during a session with a "
          "particular \n"
          "server. \n"
          "HTTP Header Persistence: support of HTTP based "
          "Persistence method used for allowing a user to interact \n"
          "during a session with a particular server.\n"
          "Compress HTTP: this action implies the compression of "
          "the HTTP \n"
          "traffic.\n"
          "SSL Proxy: this action implies the application of SSL to "
          "the corresponding HTTP connection. \n"
          "SSL \n"
          "Termination: support of SSL Termination which implies "
          "the ability to establish a secure tunnel with the "
          "client. \n"
          "\n"
          "SNAT: support of Source Network Address Translation "
          "(NAT) which implies that the origin address of the "
          "request is \n"
          "translated. \n"
          "DNAT: support of Destination NAT which implies that the "
          "destination address of the request is \n"
          "translated. \n"
          "SDNAT: support of Source NAT which implies that the "
          "origin and destination addresses of the request \n"
          "are translated. DirectRouting:support of Direct Routing "
          "technique which implies that the server sends the "
          "response \n"
          "directly to the sender.\n"
          "URL Load Balancing: this means support for load "
          "balancing based on URL contents.\n"
          "Layer 4 \n"
          "Port Forwarding: support of port forwarding technique.\n"
          "HTTP Request Header Insert: support of the insertion of "
          "HTTP \n"
          "headers inside a HTTP Request. \n"
          "HTTP Response Header Insert: support of the insertion of "
          "HTTP headers inside a HTTP \n"
          "Response. \n"
          "HTTP Request Header Delete: support of the deletion of "
          "HTTP headers inside a HTTP Request. \n"
          "HTTP \n"
          "Response Header Delete: support of the deletion of HTTP "
          "headers inside a HTTP Response. \n"
          "Backup Server Farm \n"
          "Failover: support of the management of backup server "
          "farms when primary servers fail. \n"
          "Connection Limit:support of \n"
          "techniques for the management of maximum number of "
          "concurrent connections per server. \n"
          "Bandwidth Limit:support of \n"
          "techniques for the management of bandwidth limits per "
          "server." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "34", "35", "36", "37", 
          "38", "39", "40", "41", "..", "32768..65535" }, 
       Values { "ICMP Health Check", "UDP Health Check", 
          "TCP Health Check", "HTTP Health Check", 
          "HTTPS Health Check", "SNMP Health Check", 
          "DNS Health Check", "SourceAddressHash", 
          "DestinationAddressHash", "HTTPContentHash", "URLHash", 
          "Layer4PayloadHash", "CookieHash", "HTTPHeaderHash", 
          "LeastLoadedServer", "LeastResponseTime", 
          "LeastConnections", "LeastBandwidth", "Least Connections", 
          "Least Bandwidth", "Round Robin", "Weighted Round Robin", 
          "Cookie Persistence", "Source IP Persistence", 
          "HTTP Header Persistence", "Compress HTTP", "SSL Proxy", 
          "SSL Termination", "SNAT", "DNAT", "SDNAT", 
          "URL Load Balancing", "Layer 4 Port Forwarding", 
          "HTTP Request Header Insert", 
          "HTTP Response Header Insert", 
          "HTTP Request Header Delete", 
          "HTTP Response Header Delete", 
          "Backup Server Farm Failover", "Connection Limit", 
          "Bandwidth Limit", "DMTF Reserved", "Vendor Reserved" }]
   uint16 SupportedCapabilities[];


};
