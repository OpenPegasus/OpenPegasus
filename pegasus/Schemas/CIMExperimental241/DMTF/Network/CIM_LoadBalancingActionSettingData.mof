// Copyright (c) 2012 DMTF.  All rights reserved.
   [Experimental, Version ( "2.32.0" ), 
    UMLPackagePath ( "CIM::Network" ), 
    Description ( 
       "This class describes the configuration of a load balancing "
       "policy action." )]
class CIM_LoadBalancingActionSettingData : CIM_NetworkPolicyActionSettingData {

      [Description ( 
          "This property specifies the type of health checking used.\n"
          "\"ICMP\": this health check method sends an ICMP PING "
          "message to the server in order to check its "
          "availability. \n"
          "\"TCP\": this health check method establishes a TCP "
          "connection with the server in order to check its "
          "availability. \n"
          "\"UDP\": this health check method sends an UDP packet in "
          "order to check its availability. \n"
          "\"SNMP\": this health check method sends a SNMP request "
          "to the server in order to check its availability. \n"
          "\"HTTP\": this health check method sends HTTP request to "
          "the server in order to check its availability. \n"
          "\"HTTPS\": this health check method sends HTTPS request "
          "to the server in order to check its availability. \n"
          "\"DNS\": Sends a domain name query to the server to "
          "resolve in order to check its availability." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "..", 
          "32767..65535" }, 
       Values { "Other", "ICMP", "TCP", "UDP", "SNMP", "HTTP", 
          "HTTPS", "DNS", "DMTF Reserved", "Vendor Reserved" }]
   uint16 HealthCheckPolicyType;

      [Description ( 
          "This field identifies an element involved in the action "
          "to be preformed (e.g. a cookie name, a header name, "
          "etc)." ), 
       ValueMap { "2", "3", "..", "32768..65535" }, 
       Values { "Cooking Name", "HTTP Header Name", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 HealthCheckPolicyValueType;

      [Description ( 
          "This field identifies the value of the element involved "
          "in the action to be preformed (e.g. the value of the "
          "cookie or header identified in the "
          "HealthCheckPolicyValueType property)." )]
   string HealthCheckPolicyValue;

      [Description ( 
          "This field specifies the number of negative answers that "
          "the load balancer has to receive to consider that a "
          "server is unavailable." )]
   uint16 HealthCheckPolicyFailDetectCount;

      [Description ( 
          "This field describes the checking periodicity." )]
   datetime HealthCheckPolicyInterval;

      [Description ( 
          "This property defines, after considering a server as "
          "down, the time to wait until the next try to check the "
          "server availability." )]
   datetime HealthCheckPolicyIntervalForRecovery;

      [Description ( 
          "This property indicates the waiting time after which the "
          "balanced server or application is considered not "
          "available." )]
   datetime HealthCheckTimeout;

      [Description ( 
          "This property specifies the number of positive answers "
          "that the load balancer has to receive to consider that "
          "an unavailable server is available again." )]
   uint16 HealthCheckHitsForRecovery;

      [Description ( 
          "This property identifies the type of persistent "
          "maintained by the load balancer.\n"
          "\n"
          "Cookie Based: The cookie data structure present in the "
          "HTTP header is used to persist client connections to the servers\n"
          "Source IP Address: The Source IP address of the client "
          "request is used to persist the connection to the servers\n"
          "HTTP Header: The HTTP header field in the client "
          "connection request is used to persist connection to the "
          "servers." ), 
       ValueMap { "1", "2", "3", "4", "..", "32767..65535" }, 
       Values { "Other", "Cookie Based", "Source IP Address", 
          "HTTP Header", "DMTF Reserved", "Vendor Reserved" }]
   uint16 PersistenceType;

      [Description ( 
          "This property identifies an element involved in the "
          "action to be preformed (e.g. a cookie name, a header "
          "name, etc)." ), 
       ValueMap { "2", "3", "..", "32768..65535" }, 
       Values { "Cookie Name", "HTTP Header Name", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 PersistenceValueType;

      [Description ( 
          "This field identifies the value of the Key element "
          "involved in the action to be preformed (e.g. the value "
          "of the cookie or header identified in the Key element)." )]
   string PersistenceValue;

      [Description ( 
          "This property specifies an expiration time for the "
          "persistence process." )]
   datetime PersistenceTimeout;

      [Description ( 
          "This property describes the limit on the normal number "
          "of server connections. Typically, the number server "
          "connections are represented by the number of open "
          "connected stream sockets at the application level." )]
   uint64 ConnectionNormalLimit;

      [Description ( 
          "This property describes the limit on the maximum number "
          "of server connections. Typically, the number server "
          "connections are represented by the number of open "
          "connected stream sockets at the application level." )]
   uint64 ConnectionMaxLimit;

      [Description ( 
          "This property describes the limit on the normal server bandwidth."
           ), 
       PUnit ( "bit / second" )]
   uint64 BandwidthNormalLimit;

      [Description ( 
          "This property describes the limit on the maximum server bandwidth."
           ), 
       PUnit ( "bit / second" )]
   uint64 BandwidthMaxLimit;

      [Description ( 
          "This property identifies the encryption algorithm used." ), 
       ValueMap { "2", "3", "..", "32768..65535" }, 
       Values { "AES", "3DES", "DMTF Reserved", "Vendor Reserved" }]
   uint16 EncryptionAlgorithm;


};
