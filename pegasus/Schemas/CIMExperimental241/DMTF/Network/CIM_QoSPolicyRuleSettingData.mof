// Copyright (c) 2012 DMTF.  All rights reserved.
   [Experimental, Version ( "2.32.0" ), 
    UMLPackagePath ( "CIM::Network" ), 
    Description ( 
       "This class describes the configuration of a QoS policy rule." )]
class CIM_QoSPolicyRuleSettingData : CIM_NetworkPolicyRuleSettingData {

      [Description ( 
          "The requested average transmit bandwidth limit specified "
          "in bits per second (bps)." ), 
       PUnit ( "bit / second" )]
   uint64 TransmitBandwidthLimit;

      [Description ( 
          "The requested average transmit bandwidth reservation "
          "specified in bits per second (bps)." ), 
       PUnit ( "bit / second" )]
   uint64 TransmitBandwidthReservation;

      [Description ( 
          "The requested average time to transfer packets one-way "
          "within the network from the sender to the receiver "
          "specified in nanoseconds i.e. latency. This is the delay "
          "from the start of the packet at an ingress point in the "
          "network to the end of the packet within the network at "
          "the egress point." ), 
       PUnit ( "second * 10^-9" )]
   uint64 MaxTrafficDelay;

      [Description ( 
          "The maximum delay variation between packets in a flow "
          "specified in nanoseconds." ), 
       PUnit ( "second * 10^-9" )]
   uint64 MaxTrafficJitter;

      [Description ( 
          "The requested maximum percentage traffic loss for end to "
          "end transmission with min=0 and max=100. A zero value "
          "indicates that a lossless transmission is requested and "
          "a value of 100 indicates best effort transmission." ), 
       MinValue ( 0 ), 
       MaxValue ( 100 )]
   real64 MaxTrafficLoss;

      [Description ( 
          "The requested maximum burst size in bytes. This allows "
          "the network to accommodate temporary bursts of traffic "
          "from the application by allocating appropriate amount of "
          "buffers within the network devices." ), 
       PUnit ( "byte" )]
   uint64 MaxBurstSize;

      [Description ( "The requested minimum burst size in bytes." ), 
       PUnit ( "byte" )]
   uint64 MinBurstSize;


};
