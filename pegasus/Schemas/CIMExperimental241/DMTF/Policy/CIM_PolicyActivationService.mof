// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.28.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "CIM_PolicyActivationService represents a service to enable and "
       "disable the distributed policies. The "
       "CIM_PolicyActivationService provides the two extrinsic "
       "methods: ActivatePolicy() and DeactivatePolicy(). These "
       "methods will apply/remove the specified policies to/from an "
       "associated reference monitor. The associated reference monitor "
       "is represented by the CIM_ReferenceMonotor that is associated "
       "through CIM_TargetReferenceMonitor." )]
class CIM_PolicyActivationService : CIM_Service {


      [Description ( 
          "The DeactivatePolicy() method is used to deactivate the "
          "collection of access policies specified with the "
          "TargetPolicies parameter. Upon the successful execution "
          "of this method, the following actions occur: * When the "
          "TargetPolicies parameter is Null, this method does not "
          "deactivate any access policies. * When the "
          "TargetPolicies parameter is not Null, this method will "
          "deactivate the access policies specified in the "
          "TargetPolicies parameter. The parameter specifies the "
          "target policies as an array of the policy identifiers in "
          "the scope of the associated CIM_AccessPolicyGroup. * As "
          "a side effect, this method will changes to false the "
          "Enabled property of the CIM_AccessControlPolicy "
          "instances corresponding to the deactivated policies.\n"
          "The return value of this methods will be 0 (if the "
          "execution is succeeded), or 1 (if failed)." ), 
       ValueMap { "0", "1" }, 
       Values { "Operation succeeded", "Operation failed" }]
   uint32 ActivatePolicy(
         [Description ( 
             "The ActivatePolicy() method is used to activate "
             "the collection of access policies specified with "
             "the TargetPolicies parameter. Upon the successful "
             "execution of this method, the following actions "
             "occur: * When the TargetPolicies parameter is "
             "Null, this method does not activate any access "
             "policies. * When the TargetPolicies parameter is "
             "not Null, this method will activate the access "
             "policies specified in the TargetPolicies "
             "parameter. The parameter specifies the target "
             "policies as an array of the policy identifiers in "
             "the scope of the associated CIM_AccessPolicyGroup. "
             "* As a side effect, this method will changes to "
             "true the Enabled property of the CIM_AccessControl "
             "Policy instances corresponding to the activated policies.\n"
             "The return value of this methods will be 0 (if the "
             "execution is succeeded), or 1 (if failed)." )]
      CIM_AccessControlPolicy REF TargetPolicies[]);

      [Description ( 
          "The DeactivatePolicy() method is used to deactivate the "
          "collection of access policies specified with the "
          "TargetPolicies parameter. Upon the successful execution "
          "of this method, the following actions occur: * When the "
          "TargetPolicies parameter is Null, this method does not "
          "deactivate any access policies. * When the "
          "TargetPolicies parameter is not Null, this method will "
          "deactivate the access policies specified in the "
          "TargetPolicies parameter. The parameter specifies the "
          "target policies as an array of the policy identifiers in "
          "the scope of the associated CIM_AccessPolicyGroup. * As "
          "a side effect, this method will changes to false the "
          "Enabled property of the CIM_AccessControlPolicy "
          "instances corresponding to the deactivated policies.\n"
          "The return value of this methods will be 0 (if the "
          "execution is succeeded), or 1 (if failed)." ), 
       ValueMap { "0", "1" }, 
       Values { "Operation succeeded", "Operation failed" }]
   uint32 DeactivatePolicy(
         [Description ( 
             "The DeactivatePolicy() method is used to "
             "deactivate the collection of access policies "
             "specified with the TargetPolicies parameter. Upon "
             "the successful execution of this method, the "
             "following actions occur: * When the TargetPolicies "
             "parameter is Null, this method does not deactivate "
             "any access policies. * When the TargetPolicies "
             "parameter is not Null, this method will deactivate "
             "the access policies specified in the "
             "TargetPolicies parameter. The parameter specifies "
             "the target policies as an array of the policy "
             "identifiers in the scope of the associated "
             "CIM_AccessPolicyGroup. * As a side effect, this "
             "method will changes to false the Enabled property "
             "of the CIM_AccessControlPolicy instances "
             "corresponding to the deactivated policies.\n"
             "The return value of this methods will be 0 (if the "
             "execution is succeeded), or 1 (if failed)." )]
      CIM_AccessControlPolicy REF TargetPolicies[]);

};
