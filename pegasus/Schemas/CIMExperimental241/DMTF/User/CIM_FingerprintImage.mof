// Copyright (c) 2008 DMTF.  All rights reserved.
   [Experimental, Version ( "2.21.0" ), 
    UMLPackagePath ( "CIM::User::Credential" ), 
    Description ( 
       "FingerprintImage is the Image captured through the fingerprint "
       "reader. By applying the CompressionAlgorithm on the image, the "
       "fingerprint template can be generated." )]
class CIM_FingerprintImage : CIM_Credential {

      [Key, Override ( "InstanceID" )]
   string InstanceID;

      [Description ( 
          "An integer that indicates the Image Format of the Image. "
          "The value 3 represents ANSI/INCITS 381-2004 Finger "
          "Image-Based Data Interchange Format. The value 4 "
          "represents ISO/IEC JTC 1/SC 37 N341 Biometric Data "
          "Interchange Formats Part 4: Finger Image. The value 5 "
          "represents IAFIS-IC-0110 (V3) Wavelet Scalar "
          "Quantization." ), 
       ValueMap { "0", "1", "3", "4", "5", "..", "32768..65535" }, 
       Values { "Unknown", "Other", 
          "Finger Image-Based Data Interchange Format", 
          "Biometric Data Interchange Formats", 
          "Wavelet Scalar Quantization", "DMTF Reserved", 
          "Vendor Specified" }, 
       ModelCorrespondence { "CIM_FingerprintImage.OtherImageFormat" }]
   uint16 ImageFormat;

      [Description ( 
          "A free-form string providing a description of the "
          "ImageFormat when 1, \"Other\", is specified for the "
          "ImageFormat." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { "CIM_FingerprintImage.ImageFormat" }]
   string OtherImageFormat;

      [Description ( 
          "The full content of the Image in binary form. This is "
          "the uncompressed image and the FingerprintTemplate "
          "should be generated by applying the applied "
          "CompressionAlgorithm." ), 
       OctetString]
   uint8 Image[];

      [Description ( "The resolution of the image in dots/inch." ), 
       PUnit ( "count(picture element(dot)) / inch" )]
   uint32 DPI;

      [Description ( 
          "Number of bits used to define Grayscale value." ), 
       PUnit ( "bit" )]
   uint32 Grayscale;

      [Description ( 
          "The type of method that the image is captured." ), 
       ValueMap { "0", "3", "4", "..", "32768..65535" }, 
       Values { "Unknown", "Touch", "Swipe", "DMTF Reserved", 
          "Vendor Specified" }]
   uint16 CapturingType;


};
