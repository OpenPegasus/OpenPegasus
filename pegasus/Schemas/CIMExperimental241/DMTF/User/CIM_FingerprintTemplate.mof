// Copyright (c) 2008 DMTF.  All rights reserved.
   [Experimental, Version ( "2.21.0" ), 
    UMLPackagePath ( "CIM::User::Credential" ), 
    Description ( 
       "FingerprintTemplate is the template created based on the "
       "captured fingerprint image. It is used as fingerprint "
       "information for matching and authentication purpose." )]
class CIM_FingerprintTemplate : CIM_Credential {

      [Key, Override ( "InstanceID" )]
   string InstanceID;

      [Description ( 
          "The full content of the template in binary form." ), 
       OctetString]
   uint8 Template[];

      [Description ( 
          "An integer that indicates the current Template Format "
          "The value 3 represents ANSI/INCITS 377-2004 Finger "
          "Pattern-Based Interchange Format. The value 4 represents "
          "ANSI/INCITS 378-2004 Finger Minutiae Format for Data "
          "Interchange. The value 5 represents ANSI/NIST-ITL 1-2000 "
          "Data Format for the Interchange of Fingerprint, Facial, "
          "& Scar Mark & Tattoo Information. The value 6 represents "
          "ISO/IEC JTC 1/SC 37 N340 Biometric Data Interchange "
          "Formats Part 2: Finger Minutiae Data. The value 7 "
          "represents ISO/IEC JTC 1/SC 37 N470 Biometric Data "
          "Interchange Formats Part 3: Finger Pattern Spectral "
          "Data. The value 8 represents ISO/IEC JTC 1/SC 37 N490 "
          "Biometric Data Interchange Formats Part 8: Finger "
          "Pattern Skeletal Data." ), 
       ValueMap { "0", "1", "3", "4", "5", "6", "7", "8", "..", 
          "32768..65535" }, 
       Values { "Unknown", "Other", 
          "Finger Pattern-Based Interchange Format", 
          "Finger Minutiae Format for Data Interchange", 
          "Data Format for the Interchange of Fingerprint, Facial, & Scar Mark & Tattoo Information", 
          "Biometric Data Interchange Formats Part 2", 
          "Biometric Data Interchange Formats Part 3", 
          "Biometric Data Interchange Formats Part 8", 
          "DMTF Reserved", "Vendor Specified" }, 
       ModelCorrespondence { 
          "CIM_FingerprintMatchingServiceCapabilities.TemplateFormatsSupported", 
          "CIM_FingerprintMatchingService.TemplateFormat", 
          "CIM_FingerprintMatchingServiceCapabilities.OtherTemplateFormats", 
          "CIM_FingerprintMatchingService.OtherTemplateFormat", 
          "CIM_FingerprintTemplate.OtherTemplateFormat" }]
   uint16 TemplateFormat;

      [Description ( 
          "A free-form string providing a description of the "
          "TemplateFormat when 1, \"Other\", is specified for the "
          "TemplateFormat." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { 
          "CIM_FingerprintMatchingServiceCapabilities.TemplateFormatsSupported", 
          "CIM_FingerprintMatchingService.TemplateFormat", 
          "CIM_FingerprintMatchingServiceCapabilities.OtherTemplateFormats", 
          "CIM_FingerprintMatchingService.OtherTemplateFormat", 
          "CIM_FingerprintTemplate.TemplateFormat" }]
   string OtherTemplateFormat;


};
