
Returned Path  Test_CLITestEmbeddedClass.Id="111"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "111";
    comment = "test with no embedded instance";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="111" OK
modified
modified
modified
modified
Returned Path  Test_CLITestEmbeddedClass.Id="201"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "201";
    embeddedInst = 
    instance of Test_CLITestEmbedded1
    {
        Id = "202";
        comment = "Embedded Instance comment property";
    };
    
    comment = "test with embedded instance";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="201" OK
Returned Path  Test_CLITestEmbeddedClass.Id="301"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "301";
    embeddedInst = 
    instance of Test_CLITestEmbedded1
    {
        Id = "302";
        comment = "First property with embedded instance";
    };
    
    embeddedInst2 = 
    instance of Test_CLITestEmbedded2
    {
        Id = "303";
        name = "fred";
        comment = "Second property with embedded instance";
    };
    
    comment = "test with multiple embedded instances";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="301" OK
Returned Path  Test_CLITestEmbeddedClass.Id="401"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "401";
    embeddedObj = 
    instance of Test_CLITestEmbedded1
    {
        Id = "402";
        comment = "Property is embedded object";
    };
    
    comment = "test with single embedded object";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="401" OK
Returned Path  Test_CLITestEmbeddedClass.Id="501"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "501";
    embeddedInstArray = {
        instance of Test_CLITestEmbedded1
        {
            Id = "502";
            comment = "First embedded Instance";
        };
        , 
        instance of Test_CLITestEmbedded1
        {
            Id = "503";
            comment = "Second embedded Instance";
        };
    }
    comment = "test with array of embedded instances";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
    };
    Test instance Test_CLITestEmbeddedClass.Id="501" OK
Returned Path  Test_CLITestEmbeddedClass.Id="601"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "601";
    embeddedInstArray = {
        instance of Test_CLITestEmbedded1
        {
            Id = "602";
            comment = "First embedded Instance";
        };
        , 
        instance of Test_CLITestEmbedded1
        {
            Id = "603";
            comment = "Second embedded Instance";
        };
    }
    comment = "test with array of embedded instances";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
    };
    Test instance Test_CLITestEmbeddedClass.Id="601" OK
Returned Path  Test_CLITestEmbeddedClass.Id="701"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "701";
    embeddedInst2 = 
    instance of Test_CLITestEmbedded2
    {
        Id = "702";
        recursiveEmbeddedInst = 
        instance of Test_CLITestEmbedded3
        {
            Id = "702";
            comment = "recursive embedded instance";
        };
        
        comment = "Property with embedded instance";
    };
    
    comment = "test with recursive embedded instance";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="701" OK
Returned Path  Test_CLITestEmbeddedClass.Id="801"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "801";
    embeddedInst2 = 
    instance of Test_CLITestEmbedded2
    {
        Id = "802";
        recursiveEmbeddedInst = 
        instance of Test_CLITestEmbedded3
        {
            Id = "803";
            comment = "recursive embedded instance";
        };
        
        comment = "Property with embedded instance";
    };
    
    comment = "test with ={ as embed token";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="801" OK
Returned Path  Test_CLITestEmbeddedClass.Id="901"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "901";
    comment = NULL;
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="901" OK
Returned Path  Test_CLITestEmbeddedClass.Id="1001"
Test instance Test_CLITestEmbeddedClass.Id="1001" OK
Test instance Test_CLITestEmbeddedClass.Id="1001" OK
Returned Path  Test_CLITestEmbeddedClass.Id="1101"

// path= Test_CLITestEmbeddedClass

instance of Test_CLITestEmbeddedClass
{
    Id = "1101";
    embeddedInst = 
    instance of Test_CLITestEmbedded1
    {
        Id = "1102";
    };
    
    comment = "test with embedded instance with space after {";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestEmbeddedClass.Id="1101" OK
Returned Path  Test_CLITestProviderLinkClass.child="Test_CLITestProviderClass.Id=\"100\"",parent="Test_CLITestProviderClass.Id=\"100\""

// path= Test_CLITestProviderLinkClass

instance of Test_CLITestProviderLinkClass
{
    parent = "Test_CLITestProviderClass.Id=\"100\"";
    child = "Test_CLITestProviderClass.Id=\"100\"";
    requestInputParameters = "propertyList=NULL; includeQualifiers=false; "
        "includeClassOrigin=false";
};
Test instance Test_CLITestProviderLinkClass.child="Test_CLITestProviderClass.Id=\"100\"",parent="Test_CLITestProviderClass.Id=\"100\"" OK
Return Value= 0
firstArg=test string
Return Value= 0
firstArg=test single embedded instance parameter
EmbedInstArg=

// path= Test_CLITestEmbedded1

instance of Test_CLITestEmbedded1
{
    Id = "501";
};
lastArg=last parameter
Return Value= 0
firstArg=test single embedded object parameter
embedObjArg=

// path= Test_CLITestEmbedded1

instance of Test_CLITestEmbedded1
{
    Id = "501";
};
lastArg=Last Parameter
Return Value= 0
firstArg=test embedded instance array parameter
embedInstArrayArg=

// path= Test_CLITestEmbedded1

instance of Test_CLITestEmbedded1
{
    Id = "501";
};

// path= Test_CLITestEmbedded1

instance of Test_CLITestEmbedded1
{
    Id = "502";
};
lastArg=last parameter
Return Value= 0
firstArg=test embedded object array parameter
embedObjArrayArg=

// path= Test_CLITestEmbedded1

instance of Test_CLITestEmbedded1
{
    Id = "501";
};

// path= Test_CLITestEmbedded1

instance of Test_CLITestEmbedded1
{
    Id = "502";
};
lastArg=last parameter
Return Value= 0
arraySint32=99 100 110 120 
arrayString=one two three 
Return Value= 0
arraySint32=99 100 110 120 
arrayString=one two three four 
Return Value= 0
referenceParam=Test_CLITestProviderClass.id="100"
Return Value= 0
referenceParam=Test_CLITestProviderClass.Id="100"
Return Value= 0
referenceParamArray=Test_CLITestProviderClass.id=100 Test_CLITestProviderClass.id=101 
Return Value= 0
referenceParamArray=Test_CLITestProviderClass.Id="100" Test_CLITestProviderClass.Id="101" 
INPUT ERROR: Missing Embedded object Terminator i.e. "}" or "."
INPUT ERROR: Unmatched Embedded instance end marker(s) at parameter "}"
INPUT ERROR: Unmatched Embedded instance end marker(s) at parameter "}"
Returned Path  Test_CLITestEmbeddedClass.Id=""
INPUT ERROR: "!" terminator allowed only on String type. Parameter= scalBool!
INPUT ERROR: No name on input parameter =1204
INPUT ERROR: No name on input parameter {Test_CLITestEmbedded1
cimcli CIMException:  Cmd= ci Object= Test_CLITestEmbeddedClass Code= 1
CIM_ERR_FAILED: Key Property(s) Required: Id
cimcli CIMException:  Cmd= ci Object= Test_CLITestProviderLinkClass Code= 1
CIM_ERR_FAILED: Key Property(s) Required: child
Returned Path  Test_CLITestEmbeddedClass.Id="1210"
Warning: Property nosuchProperty not in class Test_CLITestEmbeddedClass. Skipped this property.
Returned Path  Test_CLITestEmbeddedClass.Id="1211"
INPUT ERROR: Duplicate scalar property Name. comment=Whoops second def for scalar
INPUT ERROR: Duplicate scalar property Name. parent={Test_CLITestProviderClass
+++++ passed createEmbeddedInstance error tests
INPUT ERROR: Multiple definitions of scalar parameter named scalSint32
INPUT ERROR: Value conversion error. 110,120s. type sint32

Return Value= 0
INPUT ERROR: Missing Embedded object Terminator i.e. "}" or "."
INPUT ERROR: Missing Embedded object Terminator i.e. "}" or "."
INPUT ERROR: Missing Embedded object Terminator i.e. "}" or "."
INPUT ERROR: Unmatched Embedded instance end marker(s) at parameter "}"
INPUT ERROR: Multiple definitions of scalar parameter named referenceParam
Warning: Property idx not in class Test_CLITestProviderClass. Skipped this property.
cimcli Pegasus Exception: no such property: Id. Cmd = im Object = Test_CLITestEmbeddedClass
+++++ passed invokeEmbeddedInstanceMethod error tests
+++++ passed test errors tests
