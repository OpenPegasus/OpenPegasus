//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
// ==================================================================
// QExpr_TestElement
// ==================================================================
   [Version ("2.2.0"), Description (
   "QExpr_TestElement is an abstract class that provides a common "
        "superclass (or top of the inheritance tree) for the "
        "non-association classes in the test Schema.")]
   class QExpr_TestElement
   {
      [Key,
       Description (
          "An identifier that uniquely identifies each instance "
          "of the QExpr_TestElement hierarchy.") ]
     uint64 QExprInstanceId;
   };



// ===================================================================
// QExpr_TestPropertyTypes
// ===================================================================

   [Version ("2.2.0"), Description (
   "QExpr_TestPropertyTypes is a concrete class derived from QExpr_TestElement"),
    provider("QExpr_TestPropertyTypes")
   ]
class QExpr_TestPropertyTypes:QExpr_TestElement
{
      [Maxlen (256), Description (
       "a string property of QExpr_TestPropertyTypes")]
   string PropertyString;

      [Maxlen (256), Description (
       "a string property of QExpr_TestPropertyTypes")]
   string PropertyStringUint;

      [Maxlen (256), Description (
       "a string property of QExpr_TestPropertyTypes")]
   string PropertyStringSint;

      [Maxlen (256), Description (
       "a string property of QExpr_TestPropertyTypes")]
   string PropertyStringReal;

      [Description ("A string array"),
       ArrayType ( "Indexed" ) ]
   string PropertyStringArray[];

      [Description (
       "a uint8 property of QExpr_TestPropertyTypes")]
   uint8 PropertyUint8;

      [Description ("A uint8 array"),
       ArrayType ( "Indexed" ) ]
   uint8 PropertyUint8Array[];

      [Description (
      "a uint16 property of QExpr_TestPropertyTypes")]
   uint16 PropertyUint16;

      [Description ("A uint16 array"),
       ArrayType ( "Indexed" ) ]
   uint16 PropertyUint16Array[];

      [Description (
      "a uint32 property of QExpr_TestPropertyTypes")]
   uint32 PropertyUint32;

      [Description ("A uint32 array"),
       ArrayType ( "Indexed" ) ]
   uint32 PropertyUint32Array[];

      [Description (
      "a uint64 property of QExpr_TestPropertyTypes")]
   uint64 PropertyUint64;

      [Description ("A uint64 array"),
       ArrayType ( "Indexed" ) ]
   uint64 PropertyUint64Array[];

      [Description (
      "a sint8 property of QExpr_TestPropertyTypes")]
   sint8 PropertySint8;

      [Description ("A sint8 array"),
       ArrayType ( "Indexed" ) ]
   sint8 PropertySint8Array[];

      [Description (
       "a sint16 property of QExpr_TestPropertyTypes")]
   sint16 PropertySint16;

      [Description ("A sint16 array"),
       ArrayType ( "Indexed" ) ]
    sint16 PropertySint16Array[];

      [Description (
      "a sint32 property of QExpr_TestPropertyTypes")]
   sint32 PropertySint32;

      [Description ("A sint32 array"),
       ArrayType ( "Indexed" ) ]
   sint32 PropertySint32Array[];

      [Description (
      "a sint64 property of QExpr_TestPropertyTypes")]
   sint64 PropertySint64;

      [Description ("A sint64 array"),
       ArrayType ( "Indexed" ) ]
   sint64 PropertySint64Array[];

      [Description (
      "a boolean property of QExpr_TestPropertyTypes")]
   boolean PropertyBoolean;

      [Description ("A boolean array"),
       ArrayType ( "Indexed" ) ]
   boolean PropertyBooleanArray[];

     [Description (
      "a real32 property of QExpr_TestPropertyTypes")]
   real32 PropertyReal32;

     [Description ("A real32 array"),
       ArrayType ( "Indexed" ) ]
   real32 PropertyReal32Array[];

     [Description (
      "a real64 property of QExpr_TestPropertyTypes")]
   real64 PropertyReal64;

     [Description ("A real64 array"),
       ArrayType ( "Indexed" ) ]
   real64 PropertyReal64Array[];

      [Description (
      "a datetime property of QExpr_TestPropertyTypes")]
   datetime PropertyDatetime;

      [Description ("A datetime array"),
       ArrayType ( "Indexed" ) ]
   datetime PropertyDatetimeArray[];

      [Description (
      "a char16 property of QExpr_TestPropertyTypes")]
   char16 PropertyChar16;

      [Description ("A char16 array"),
       ArrayType ( "Indexed" ) ]
   char16 PropertyChar16Array[];

      [Description ("A valuemap array"),
       ValueMap { "1", "2", "3", "4", "5" },
       Values { "Other", "Unknown", "Disabled", "Enabled",
          "Not Implemented" }]
   uint16 PropertyValueMap;

};

