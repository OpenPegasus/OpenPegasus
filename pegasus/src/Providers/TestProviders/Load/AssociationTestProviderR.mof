//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
#pragma locale ("en_US")

instance of PG_ProviderModule
{
    Description = "The Pegasus Association Provider Module that implements Sample_InstanceProviderClass";
    Caption = "Pegasus Association Test Provider Module";
    Name = "AssociationTestProviderModule";
    Vendor = "OpenPegasus";
    Version = "2.0.0";
    InterfaceType = "PG_DefaultC++";
    InterfaceVersion = "2.0.0";
    Location = "AssociationTestProvider";
};

instance of PG_Provider
{
    ProviderModuleName = "AssociationTestProviderModule";
    Name = "AssociationTestProvider";
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderClassA";
    ClassName = "TST_ClassA";
    Namespaces = { "root/teststatic" };
    ProviderType = { 2 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderClassB";
    ClassName = "TST_ClassB";
    Namespaces = { "root/teststatic" };
    ProviderType = { 2 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderClassC";
    ClassName = "TST_ClassC";
    Namespaces = { "root/teststatic" };
    ProviderType = { 2 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderClassD";
    ClassName = "TST_ClassD";
    Namespaces = { "root/teststatic" };
    ProviderType = { 2 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderAssoc1";
    ClassName = "TST_Assoc1";
    Namespaces = { "root/teststatic" };
    ProviderType = { 3 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderAssoc2";
    ClassName = "TST_Assoc2";
    Namespaces = { "root/teststatic" };
    ProviderType = { 3 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderAssoc3";
    ClassName = "TST_Assoc3";
    Namespaces = { "root/teststatic" };
    ProviderType = { 3 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderAssoc4";
    ClassName = "TST_Assoc4";
    Namespaces = { "root/teststatic" };
    ProviderType = { 3 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderAssoc5";
    ClassName = "TST_Assoc5;
    Namespaces = { "root/teststatic" };
    ProviderType = { 3 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "AssociationTestProviderModule";
    ProviderName = "AssociationTestProvider";
    CapabilityID = "AssociationTestProviderAssoc6";
    ClassName = "TST_Assoc6;
    Namespaces = { "root/teststatic" };
    ProviderType = { 3 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

