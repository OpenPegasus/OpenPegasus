//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
#pragma locale("en_US")

class TST_InstanceZ
{
    [key]
    string Name;

    string s;
};


class TST_InstanceA
{
    [key]
    string Name;

    string s;
};

class TST_InstanceB
{
    [key]
    string Name;

    string s;
};


instance of TST_InstanceZ
{
    Name = "001";
    s = "TST_InstanceZ.Name=\"001\"";
};

instance of TST_InstanceZ
{
    Name = "002";
    s = "TST_InstanceZ.Name=\"002\"";
};

instance of TST_InstanceZ
{
    Name = "003";
    s = "TST_InstanceZ.Name=\"003\"";
};


// Classes used by the TestOperationsProvider in CIMOMHandleTestProvider

[Abstract]
class TST_OperationsBase
{
    string Description;
};

class TST_Operations1 : TST_OperationsBase
{
    [Key] uint32 key;
};

class TST_Operations2 : TST_OperationsBase
{
    [Key] uint32 key;
};

[Association]
class TST_OperationsAssoc : TST_OperationsBase
{
    [Key] TST_Operations1 REF a;
    [Key] TST_Operations2 REF b;
};

class TST_OperationsDriver : TST_OperationsBase
{
    [Key, Description("Unused")] uint32 key;
    [Static] uint32 testCIMOMHandle();
    [Static] uint32 testMethod([IN] string param1, [IN, OUT] uint32 param2);
};

// Instances used by the TestOperationsProvider in CIMOMHandleTestProvider

instance of TST_Operations1
{
    Description = "Test instance 1";
    key = 1;
};

instance of TST_Operations1
{
    Description = "Test instance 2";
    key = 2;
};

instance of TST_Operations2
{
    Description = "Test instance 3";
    key = 3;
};

instance of TST_OperationsAssoc
{
    Description = "Test association instance 1";
    a = "TST_Operations1.key=1";
    b = "TST_Operations2.key=3";
};

instance of TST_OperationsAssoc
{
    Description = "Test association instance 2";
    a = "TST_Operations1.key=2";
    b = "TST_Operations2.key=3";
};

