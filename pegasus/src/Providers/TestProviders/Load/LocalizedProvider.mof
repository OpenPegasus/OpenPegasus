//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////

// globalization test class for localization and UTF testing
[Version ("2.7.0")]
class Test_LocalizedProviderClass
{
    [key, read]
    Uint8 Identifier;

    [read, write]
    string RoundTripString;

    [read, write]
    char16 RoundTripChar;

    [read]
    string ResourceBundleString;

    [read, write]
    string ContentLanguageString;

    string UTFMethod(
        [IN] string inStr,
        [IN] char16 inChar16,
        [OUT] string outStr,
        [OUT] char16 outChar16);

    uint16 generateIndication();

    uint8 getConsumerStatus();

    boolean setDefaultMessageLoading([IN] boolean newSetting);
};

// globalization test class for aggregation tests
[Version ("2.7.0")]
class Test_LocalizedProviderSubClass : Test_LocalizedProviderClass
{
    [read, write]
    string TestString;
};

// globalization test class for indication tests
[Indication, Version ("2.7.0")]
class LocalizedProvider_TestIndication : CIM_Indication
{
    string UnicodeStr;
    char16 UnicodeChar;
};

