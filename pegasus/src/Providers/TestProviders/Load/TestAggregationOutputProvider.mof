//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
// Author: Aruran, IBM (ashanmug@in.ibm.com)
//
// Modified By:
//
//%/////////////////////////////////////////////////////////////////////////////
[Version("1.0.0"), Description (" Class that defines a person.")]
class TEST_Person
{
    [key]
    string name;
};

[Version("1.0.0"), Description (" Class that defines a personDynamic for testing provider.")]
class TEST_PersonDynamic : TEST_Person
{
    [key]
    string name;
};


[Association, Version("1.0.0"), Description(" Teaches defines the "
"relationship between a teacher and a student.") ]
class TEST_Teaches
{
    [key] TEST_Person ref teacher;
    [key] TEST_Person ref student;
};

[Association, Version("1.0.0"), Description(" Works defines the "
"relationship between employee and manager.") ]
class TEST_Works
{
    [key] TEST_Person ref employee;
    [key] TEST_Person ref manager;
};

[Association, Version("1.0.0"), Description(" Marriage defines the "
"relationship between husband and wife.") ]
class TEST_Marriage
{
    [key] TEST_Person ref husband;
    [key] TEST_Person ref wife;
};

[Association, Version("1.0.0"), Description(" Family defines the "
"relationship between father and child.") ]
class TEST_Family
{
    [key] TEST_Person ref father;
    [key] TEST_Person ref child;
};

[Association, Version("1.0.0"), Description(" Dynamic Teaches defines the "
"relationship between a teacher and a student.") ]
class TEST_TeachesDynamic : TEST_Teaches
{
    [key] TEST_Person ref teacher;
    [key] TEST_Person ref student;
};

[Association, Version("1.0.0"), Description(" Dynamic Works defines the "
"relationship between employee and manager.") ]
class TEST_WorksDynamic : TEST_Works
{
    [key] TEST_Person ref employee;
    [key] TEST_Person ref manager;
};

[Association, Version("1.0.0"), Description(" Dynamic Family defines the "
"relationship between father and child.") ]
class TEST_FamilyDynamic : TEST_Family
{
    [key] TEST_Person ref father;
    [key] TEST_Person ref child;
};

[Association, Version("1.0.0"), Description(" Dynamic Marriage defines the "
"relationship between husband and wife.") ]
class TEST_MarriageDynamic : TEST_Marriage
{
    [key] TEST_Person ref husband;
    [key] TEST_Person ref wife;
};

instance of TEST_Person { name = "John"; };

instance of TEST_Person { name = "Nazerath"; };

instance of TEST_Person { name = "George"; };

instance of TEST_Person { name = "Mike"; };

instance of TEST_Person { name = "Joseph"; };

instance of TEST_Person { name = "Trish"; };

instance of TEST_Person { name = "Mathew"; };

instance of TEST_Person { name = "Francis"; };

instance of TEST_Teaches
{
    teacher = "TEST_Person.name=\"John\"";
    student = "TEST_Person.name=\"Nazerath\"";
};

instance of TEST_Works
{
    employee = "TEST_Person.name=\"George\"";
    manager = "TEST_Person.name=\"Mike\"";
};

instance of TEST_Family
{
    father = "TEST_Person.name=\"Joseph\"";
    child = "TEST_Person.name=\"Trish\"";
};
