//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
// ===================================================================
// Indication provider
// ===================================================================

instance of PG_ProviderModule
{
   Description = "CMPI Test Indication provider";
   Name = "TestCMPIIndicationProviderModule";
  // The library name on disk
   Location = "cmpiTestIndicationProvider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIIndicationProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIIndicationProvider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIIndicationProviderModule";
   ProviderName = "TestCMPIIndicationProvider";
   CapabilityID = "CMPI Test Indication Provider";
   // Name of the CIM Class as defined in the mof.
   ClassName = "TestCMPI_Indication";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 4 }; // Indication
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};


// ===================================================================
// Method provider
// ===================================================================
instance of PG_ProviderModule
{
   Description = "CMPI Test Method provider";
   Name = "TestCMPIMethodProviderModule";
  // The library name on disk
   Location = "cmpiTestMethodProvider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIMethodProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIMethodProvider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIMethodProviderModule";
   ProviderName = "TestCMPIMethodProvider";
   CapabilityID = "CMPI Test Method Provider";
   // Name of the CIM Class as defined in the mof.
   ClassName = "TestCMPI_Method";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 5 }; // Method
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};

// ===================================================================
// Method provider for testing CMPIError
// ===================================================================
instance of PG_ProviderModule
{
   Description = "CMPI Test Error provider";
   Name = "TestCMPIErrorProviderModule";
  // The library name on disk
   Location = "cmpiTestErrorProvider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIErrorProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIErrorProvider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIErrorProviderModule";
   ProviderName = "TestCMPIErrorProvider";
   CapabilityID = "CMPI Test Error Provider";
   // Name of the CIM Class as defined in the mof.
   ClassName = "TestCMPI_Error";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 5 }; // Method
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};

// ===================================================================
// Method provider for Enumeration
// ===================================================================
instance of PG_ProviderModule
{
   Description = "CMPI Test Enumeration provider";
   Name = "TestCMPIEnumerationProviderModule";
  // The library name on disk
   Location = "cmpiTestEnumerationProvider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIEnumerationProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIEnumerationProvider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIEnumerationProviderModule";
   ProviderName = "TestCMPIEnumerationProvider";
   CapabilityID = "CMPI Test Enumeration Provider";
   // Name of the CIM Class as defined in the mof.
   ClassName = "TestCMPI_Enumeration";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 5 }; // Method
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};

// ===================================================================
// Method provider for CMPI_BrokerEnc.cpp
// ===================================================================
instance of PG_ProviderModule
{
   Description = "CMPI Test BrokerEnc provider";
   Name = "TestCMPIBrokerEncProviderModule";
   // The library name on disk
   Location = "cmpiTestBrokerEncProvider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIBrokerEncProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIBrokerEncProvider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIBrokerEncProviderModule";
   ProviderName = "TestCMPIBrokerEncProvider";
   CapabilityID = "CMPI Test BrokerEnc Provider";
   // Name of the CIM Class as defined in the mof.
   ClassName = "TestCMPI_BrokerEnc";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 5 }; // Method
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};

// ===================================================================
// Method provider for CMPI_Instance.cpp
// ===================================================================
instance of PG_ProviderModule
{
   Description = "CMPI Test Method Provider for CMPIInstance";
   Name = "TestCMPIInstanceProviderModule";
  // The library name on disk
   Location = "TestCMPIInstanceProvider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIInstanceProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIInstanceProvider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIInstanceProviderModule";
   ProviderName = "TestCMPIInstanceProvider";
   CapabilityID = "CMPI Test Method Provider for CMPIInstance";
   // Name of the CIM Class as defined in the mof.
   ClassName = "TestCMPIInstance_Method";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 5 }; // Method
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};

// ===================================================================
// Method provider for CMPI_Broker.cpp
// ===================================================================
instance of PG_ProviderModule
{
   Description = "CMPI Test Broker provider";
   Name = "TestCMPIBrokerProviderModule";
   // The library name on disk
   Location = "cmpiTestBrokerProvider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIBrokerProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIBrokerProvider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIBrokerProviderModule";
   ProviderName = "TestCMPIBrokerProvider";
   CapabilityID = "CMPI Test Broker Provider";
   // Name of the CIM Class as defined in the mof.
   ClassName = "TestCMPI_Broker";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 2, 5 }; // Instance and Method
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};

// ===================================================================
// Instance and ExecQuery provider for CMPI_Broker.cpp
// ===================================================================

//This Provider shares the PG_ProviderModule instance with
//  TestCMPIBrokerProvider
instance of PG_Provider
{
   ProviderModuleName = "TestCMPIBrokerProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIBrokerInstanceProvider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIBrokerProviderModule";
   ProviderName = "TestCMPIBrokerInstanceProvider";
   CapabilityID = "CMPI Test Instance Provider";
   // Name of the CIM Class as defined in the mof.
   ClassName = "TestCMPI_BrokerInstance";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 2 , 7}; // Instance
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};

// ===================================================================
// Instance provider that fails loading. The provider returns a NULL pointer
// when _CreateInstance function is called. (the entry point)
// ===================================================================
instance of PG_ProviderModule
{
   Description = "CMPI Test Fail_1 provider";
   Name = "TestCMPIFail_1ProviderModule";
  // The library name on disk
   Location = "cmpiTestFail_1Provider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIFail_1ProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIFail_1Provider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIFail_1ProviderModule";
   ProviderName = "TestCMPIFail_1Provider";
   CapabilityID = "CMPI Test Instance Fail 1 Provider";
   // Name of the CIM Class as defined in the mof.
   ClassName = "TestCMPI_Fail_1";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 2,3,4, 5}; //All the different types
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};

// ===================================================================
// Instance provider that fails loading. The provider has the symbolic
// name for the _CreateInstance function mistyped.
// ===================================================================
instance of PG_ProviderModule
{
   Description = "CMPI Test Fail_2 provider";
   Name = "TestCMPIFail_2ProviderModule";
  // The library name on disk
   Location = "cmpiTestFail_2Provider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIFail_2ProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIFail_2Provider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIFail_2ProviderModule";
   ProviderName = "TestCMPIFail_2Provider";
   CapabilityID = "CMPI Test Instance Fail 1 Provider";
   // Name of the CIM Class as defined in the mof.

   ClassName = "TestCMPI_Fail_2";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 2 }; //Instance
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};
// ===================================================================
// Instance provider that fails loading. The provider has two entry
// functions - the _CreateInstance and _Generic_Create_Instance. They
// cannot co-exist.
// ===================================================================
instance of PG_ProviderModule
{
   Description = "CMPI Test Fail_3 provider";
   Name = "TestCMPIFail_3ProviderModule";
  // The library name on disk
   Location = "cmpiTestFail_3Provider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIFail_3ProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIFail_3Provider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIFail_3ProviderModule";
   ProviderName = "TestCMPIFail_3Provider";
   CapabilityID = "CMPI Test Instance Fail 1 Provider";
   // Name of the CIM Class as defined in the mof.

   ClassName = "TestCMPI_Fail_3";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 2 }; //Instance
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};
// ===================================================================
// Instance provider that returns an error for every Instance API
// class.
// ===================================================================
instance of PG_ProviderModule
{
   Description = "CMPI Test Fail_4 provider";
   Name = "TestCMPIFail_4ProviderModule";
  // The library name on disk
   Location = "cmpiTestFail_4Provider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIFail_4ProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIFail_4Provider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIFail_4ProviderModule";
   ProviderName = "TestCMPIFail_4Provider";
   CapabilityID = "CMPI Test Instance Fail 1 Provider";
   // Name of the CIM Class as defined in the mof.

   ClassName = "TestCMPI_Fail_4";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 2 }; //Instance
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};

// ===================================================================
// Error provider that returns an error for every API class.
// ===================================================================
instance of PG_ProviderModule
{
   Description = "CMPI Test Fail_5 provider";
   Name = "TestCMPIFail_5ProviderModule";
  // The library name on disk
   Location = "cmpiTestFail_5Provider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIFail_5ProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIFail_5Provider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIFail_5ProviderModule";
   ProviderName = "TestCMPIFail_5Provider";
   CapabilityID = "CMPI Test Instance Fail 5 Provider";
   // Name of the CIM Class as defined in the mof.
   ClassName = "TestCMPI_Fail_5";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 2 , 3 , 4, 5}; // Instance, Indication, Association & Method
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};

// ===================================================================
// Instance provider that tests thread allocation using
// broker->xft->newThread functionality.
// ===================================================================

instance of PG_ProviderModule
{
   Description = "CMPI Test newThread provider";
   Name = "TestCMPIThreadProviderModule";
  // The library name on disk
   Location = "cmpiTestCMPIThreadProvider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIThreadProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIThreadProvider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIThreadProviderModule";
   ProviderName = "TestCMPIThreadProvider";
   CapabilityID = "CMPI Test newThread Provider";
   // Name of the CIM Class as defined in the mof.
   ClassName = "TestCMPI_Thread";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 2 }; // Instance
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};

// ===================================================================
// IndicationStressTest Provider
// ===================================================================

instance of PG_ProviderModule
{
    Description = "Sample Pegasus CMPI Provider for stress testing Indications";
    Caption = "Sample Pegasus CMPI Provider for stress testing Indications";
    Name = "TestCMPIIndicationStressTestProviderModule";
    Vendor = "OpenPegasus";
    Version = "2.0.0";
    InterfaceType = "CMPI";
    InterfaceVersion = "2.0.0";
    Location = "cmpiIndicationStressTestProvider";
};

instance of PG_Provider
{
    ProviderModuleName = "TestCMPIIndicationStressTestProviderModule";
    Name = "TestCMPIIndicationStressTestProvider";
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "TestCMPIIndicationStressTestProviderModule";
    ProviderName = "TestCMPIIndicationStressTestProvider";
    CapabilityID = "1";
    ClassName = "TestCMPI_IndicationStressTestClass";
    Namespaces = { "test/TestProvider", "test/Remote/Localhost", "test/testIndSrcNS1", "test/testIndSrcNS2"};
    ProviderType = { 4, 5 };  // Indication & Method
    SupportedProperties = NULL;
    SupportedMethods = {"SendTestIndicationNormal","getSubscriptionCount"};
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "TestCMPIIndicationStressTestProviderModule";
    ProviderName = "TestCMPIIndicationStressTestProvider";
    CapabilityID = "2";
    ClassName = "TestCMPI_IndicationStressTestSubClass";
    Namespaces = { "test/TestProvider", "test/Remote/Localhost", "test/testIndSrcNS1", "test/testIndSrcNS2"};
    ProviderType = { 4, 5 };  // Indication & Method
    SupportedProperties = NULL;
    SupportedMethods = {"SendTestIndicationNormal","getSubscriptionCount"};
};

// ===================================================================
// Instance provider that supports enumerateInstances only and does not set
// the keybindings itself while using input classPath to build the CMPIInstance
// ===================================================================
instance of PG_ProviderModule
{
   Description = "CMPI Test KeyReturned provider";
   Name = "TestCMPIKeyReturnedProviderModule";
  // The library name on disk
   Location = "cmpiTestKeyReturnedProvider";
   Vendor = "OpenPegasus";
   Version = "2.0.0";
   InterfaceType = "CMPI";
   InterfaceVersion = "2.0.0";
};

instance of PG_Provider
{
   ProviderModuleName = "TestCMPIKeyReturnedProviderModule";
   // The provider name as referenced in the code!
   Name = "TestCMPIKeyReturnedProvider";
};

instance of PG_ProviderCapabilities
{
   ProviderModuleName = "TestCMPIKeyReturnedProviderModule";
   ProviderName = "TestCMPIKeyReturnedProvider";
   CapabilityID = "CMPI Test KeyReturned Provider";
   // Name of the CIM Class as defined in the mof.

   ClassName = "TestCMPI_KeyReturned";
   Namespaces = { "test/TestProvider", "test/Remote/Localhost" };
   ProviderType = { 2 }; //Instance
   SupportedProperties = NULL; // All properties
   SupportedMethods = NULL; // All methods
};

