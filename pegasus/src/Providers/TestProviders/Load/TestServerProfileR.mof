//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
#pragma locale ("en_US")

instance of PG_ProviderModule
{
    Description = "Library containing providers used for testing the Pegasus Server Profile Implementation";
    Caption = "SMI-S Server Profile-compliant test providers";
    Name = "TestServerProfileProvidersModule";
    Vendor = "OpenPegasus";
    Version = "2.0.0";
    InterfaceType = "C++Default";
    InterfaceVersion = "2.6.0";
    Location = "TestServerProfileProviders";
};

//
// Provider that serves a managed element for the array profile
//
instance of PG_Provider
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    Name = "StorageSystemTestProvider";
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    ProviderName = "StorageSystemTestProvider";
    CapabilityID = "Test_StorageSystem";
    ClassName = "Test_StorageSystem";
    Namespaces = { "test/TestProvider" };
    ProviderType = { 2 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderProfileCapabilities
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    ProviderName = "StorageSystemTestProvider";
    CapabilityID = "ArrayProfile";
    RegisteredProfile = 9; // Array Profile
    RegisteredSubProfiles = {
        1004, // SNIA Block Server Performance
        1011, // SNIA Disk Drive Lite
        1024}; // SNIA Indications
    ProfileVersion = "1.1.0";
    ConformingElements = { "Test_StorageSystem" };
};

// DMTF Profiles

instance of PG_Provider
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    Name = "StorageSystemTestFANProvider";
};

instance of PG_Provider
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    Name = "StorageSystemTestEPProvider";
};

instance of PG_Provider
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    Name = "StorageSystemTestCPUProvider";
};

instance of PG_ProviderProfileCapabilities
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    ProviderName = "StorageSystemTestProvider";
    CapabilityID = "ComputerSystemProfile";
    RegisteredProfile = 507; // Computer System profile
    RegisteredSubProfiles = {
        3008, // DMTF Fan
        3009, // DMTF Ethernet Port
        3016}; // DMTF CPU

    SubProfileProviderModuleNames = {
        "TestServerProfileProvidersModule",
        "TestServerProfileProvidersModule",
        "TestServerProfileProvidersModule"};

    SubProfileProviderNames = {
        "StorageSystemTestFANProvider",
        "StorageSystemTestEPProvider",
        "StorageSystemTestCPUProvider"};

    ProfileVersion = "1.0.0";
    ConformingElements = { "Test_StorageSystem" };
};

//
// Provider that serves a managed element for the array profile.
// This variation does not support a single class whose instances
// are elements that conform to a single profile.
//
instance of PG_Provider
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    Name = "MCSStorageSystemTestProvider";
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    ProviderName = "MCSStorageSystemTestProvider";
    CapabilityID = "Test_MCSStorageSystem";
    ClassName = "Test_MCSStorageSystem";
    Namespaces = { "test/TestProvider" };
    ProviderType = { 2 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    ProviderName = "MCSStorageSystemTestProvider";
    CapabilityID = "Test_ElementConformsToProfile";
    ClassName = "Test_ElementConformsToProfile";
    Namespaces = { "test/TestProvider" };
    ProviderType = { 2 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderProfileCapabilities
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    ProviderName = "MCSStorageSystemTestProvider";
    CapabilityID = "ArrayProfile";
    RegisteredProfile = 9; // Array Profile
    RegisteredSubProfiles = {
        1004, // SNIA Block Server Performance
        1011, // SNIA Disk Drive Lite
        1024}; // SNIA Indications
    ProfileVersion = "1.1.0";
};

//
// Provider that serves a managed element for some other profile
//
instance of PG_Provider
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    Name = "OtherSystemTestProvider";
};

instance of PG_ProviderCapabilities
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    ProviderName = "OtherSystemTestProvider";
    CapabilityID = "Test_OtherSystem";
    ClassName = "Test_OtherSystem";
    Namespaces = { "test/TestProvider" };
    ProviderType = { 2 };
    SupportedProperties = NULL;
    SupportedMethods = NULL;
};

instance of PG_ProviderProfileCapabilities
{
    ProviderModuleName = "TestServerProfileProvidersModule";
    ProviderName = "OtherSystemTestProvider";
    CapabilityID = "OtherProfile";
    RegisteredProfile = 0; // Other
    OtherRegisteredProfile = "SomeSystemProfile";
    ProfileVersion = "0.1.0";
    OtherProfileOrganization = "OpenPegasus";

    RegisteredSubProfiles = {
        0, // Other
        1004, // SNIA Block Server Performance
        1011, // SNIA Disk Drive Lite
        0, // Other
        1024}; // SNIA Indications
    SubprofileVersions = {
        "0.1.0",
        "1.1.0",
        "1.1.0",
        "0.1.0",
        "1.1.0"};
    OtherRegisteredSubProfiles = {
        "Some Subprofile",
        "Some Other Subprofile"};
    OtherSubProfileOrganizations = {
        "OpenPegasus",
        "OpenPegasus"};
    ConformingElements = { "Test_OtherSystem" };
};
