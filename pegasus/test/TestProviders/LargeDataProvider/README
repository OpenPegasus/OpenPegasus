//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
Large Data Sample Provider
--------------------------
The test programs present in this directory implement an instance provider
that exercise the messaging system by returning large amounts of data.

The Base Class of the provider is LargeDataSampleClass, the class for which
all the CIM operations are performed is SampleClass.

Working
-------
There is a const macro NO_OF_INSTANCES which decides the number of instances
to be created. This can be modified for testing huge amount of data in any of
the 2 places. Either in the source file LargeDataProvider.cpp Or in the
Makefile by defining the NO_OF_INSTANCES locally as:
LOCAL_DEFINES=-DNO_OF_INSTANCES=<number>
If it is defined inside the Makefile, the value present in the cpp source is
overwritten.
The creation of Instances is done when the enumerateInstances method of the
provider is called.If a client requests for enumerateInstanceNames it will fail
if enumerateInstances wouldn't have been executed.

Scripts
-------
rebuild: After modifying the source for NO_OF_INSTANCES you need to execute
	this script in order to rebuild and register the provider. It also
	restarts the cimserver so that the new repository is also loaded when
	we are performing operations on the Provider.
